colorscheme gruvbox

face global LineNumbersWrapped 'rgb:282828'
face global Error rgb:282828,rgb:fb4934

add-highlighter global/ number_lines -hlcursor
add-highlighter global/ show_matching
add-highlighter global/ wrap -word -indent

hook global BufOpenFile .* %{ modeline-parse }
hook global BufOpenFile .* %{ editorconfig-load }
hook global BufNewFile  .* %{ editorconfig-load }
hook global BufWritePre .* %{ try %{ execute-keys -draft \%s\h+$<ret>d } }

map global user -docstring 'paste (after) from clipboard' p '!xclip -selection clipboard -o<ret>'
map global user -docstring 'paste (after) from clipboard' P '<a-!>xclip -selection clipboard -o<ret>'
map global user -docstring 'replace from clipboard'       R '|xclip -selection clipboard -o<ret>'
map global user -docstring 'yank to clipboard'            y '<a-|>xclip -selection clipboard -i<ret>'
map global user -docstring 'save buffer'                  w ':w<ret>'
map global user -docstring 'save and exit'                q ':wq<ret>'
map global user -docstring 'next lint error'              ] ':lint-next-error<ret>'
map global user -docstring 'previous lint error'          [ ':lint-previous-error<ret>'

map global normal <space> ','
map global normal ,       '<space>'
map global normal /       '/(?i)'
map global normal '#'     ':comment-line<ret>'

set global grepcmd 'ag --column'
set global tabstop 4
set global ui_options ncurses_assistant=off
set global modelinefmt '%val{bufname} %val{opt_filetype} %val{opt_eolformat} %val{cursor_line}:%val{cursor_char_column} {{context_info}} {{mode_info}}'

define-command disable-autolint -docstring 'disable auto-lint' %{
    lint-disable
    unset-option window lintcmd
    remove-hooks window lint
}

define-command disable-autoformat -docstring 'disable auto-format' %{
    unset-option window formatcmd
    remove-hooks window format
}

hook global WinSetOption filetype=.* %{
    disable-autolint
    disable-autoformat
    go-disable-autocomplete
}

hook global WinSetOption filetype=python %{
    set-option window lintcmd 'pylint --msg-template="{path}:{line}:{column}: {category}: {msg}" -rn -sn'
    lint-enable
    lint
    hook window -group lint BufWritePost .* lint

    set-option window formatcmd 'yapf'
    hook window -group format BufWritePre .* format
}

hook global WinSetOption filetype=go %{
    set window lintcmd "run() { cp $1 $1.go; golint $1.go; go vet $1.go 2>&1 | sed -E 's/: /: error: /'; } && run"
    lint-enable
    lint
    hook window -group lint BufWritePost .* lint

    hook window -group format BufWritePre .* %{ go-format -use-goimports }

    go-enable-autocomplete
}

hook global WinSetOption filetype=(javascript|typescript|css|scss|json|markdown|yaml) %{
    set-option window formatcmd "prettier --stdin-filepath=${kak_buffile}"
    hook window -group format BufWritePre .* format
}

%sh{kak-lsp --kakoune -s $kak_session}
lsp-start
